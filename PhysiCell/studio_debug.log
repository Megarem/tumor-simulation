DEBUG:root:studio.py: config file is config/PhysiCell_settings.xml
DEBUG:root:studio.py: open_as_cb():  filePath is valid
DEBUG:root:len(config_file) = 29
DEBUG:root:done with args.config
DEBUG:root:exec pgm is project
DEBUG:root:self.current_dir = /home/aymeric/tumor-simulation/PhysiCell
DEBUG:root:self.studio_root_dir = /home/aymeric/tumor-simulation/PhysiCell/studio
DEBUG:root:self.config_dir = /home/aymeric/tumor-simulation/PhysiCell/config
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> oxygen
DEBUG:root: --> glucose
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea1d50>
DEBUG:root:   -------- oxygen:  dirichlet_xmin = 38
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea1df0>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea1e90>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea1f30>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea1fd0>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea2070>
DEBUG:root:dc_ic_units =  dimensionless
DEBUG:root:dc_bc_units = dimensionless
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea23e0>
DEBUG:root:   -------- glucose:  dirichlet_xmin = 38
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea2480>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea2520>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea25c0>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea2660>
DEBUG:root:bv = <Element 'boundary_value' at 0x7f393eea2700>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x7f393eea27f0>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x7f393eea2890>
DEBUG:root:------- options: <Element 'initial_condition' at 0x7f393eea28e0>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x7f393eea2a20>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:
====================== create_cycle_tab ===================
DEBUG:root: new stacked widget: trate live -------------> 0
DEBUG:root: new stacked widget: trate Ki67 -------------> 1
DEBUG:root: new stacked widget: t02 -------------> 2
DEBUG:root: new stacked widget: trate_flowcyto -------------> 3
DEBUG:root: new stacked widget: flow cyto sep -------------> 4
DEBUG:root: new stacked widget: trate_quiescent -------------> 5
DEBUG:root: new stacked widget: duration live -------------> 6
DEBUG:root: new stacked widget: duration Ki67 -------------> 7
DEBUG:root: new stacked widget: t02 -------------> 8
DEBUG:root: new stacked widget: duration_flowcyto -------------> 9
DEBUG:root: new stacked widget: flow cyto sep -------------> 10
DEBUG:root: new stacked widget: duration_quiescent -------------> 11
DEBUG:root:studio.py: first_cell_def_name= cancer
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> oxygen
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root: --> glucose
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking cancer
DEBUG:root:Checking microglia
DEBUG:root:Checking astrocyte
DEBUG:root:Checking test
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= cancer, reset_mapping= False
DEBUG:root:
--------new_intracellular_params(): cdname_new= cancer
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x7f393eea2e80>
DEBUG:root:--  cycle_live_trate00 0.0
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7f393eea2fc0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7f393eea31a0>
DEBUG:root:phase_duration= <Element 'duration' at 0x7f393eea3240>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x7f393eea3b50>
DEBUG:root:<Element 'duration' at 0x7f393eea3bf0>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x7f393eea3c90>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'cancer': '1'}
DEBUG:root:--> {'cancer': '1', 'microglia': '1.0'}
DEBUG:root:--> {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0'}
DEBUG:root:--> {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= cancer,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = oxygen
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7f393eec2160>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eec2200>
DEBUG:root: chemotactic_sensitivity--> oxygen = 0.0
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eec2250>
DEBUG:root: chemotactic_sensitivity--> glucose = 0.0
DEBUG:root:{'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = oxygen
DEBUG:root:     chemotactic_sensitivity (dict)= {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7f393eec2430>
DEBUG:root:0) -- secretion substrate = oxygen
DEBUG:root:1) -- secretion substrate = glucose
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7f393eec2fc0>
DEBUG:root: live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7f393eec8090>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= cancer --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= microglia, reset_mapping= False
DEBUG:root:
--------new_intracellular_params(): cdname_new= microglia
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[2]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x7f393eec83b0>
DEBUG:root:--  cycle_live_trate00 0.00072
DEBUG:root: >> phase_durations_path =.//cell_definition[2]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7f393eec84f0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f393eec86d0>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eec8770>
DEBUG:root:start_index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f393eec8ea0>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eec8f40>
DEBUG:root:start_index= 0
DEBUG:root: --- transition rate 01 (float) = 9000000000.0
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eec8fe0>
DEBUG:root:start_index= 1
DEBUG:root: --- transition rate 12 (float) = 1.15741e-05
DEBUG:root:volume_path=.//cell_definition[2]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[2]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'cancer': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[2]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= microglia,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = oxygen
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7f393eecb010>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eecb060>
DEBUG:root: chemotactic_sensitivity--> oxygen = 0.0
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eecb0b0>
DEBUG:root: chemotactic_sensitivity--> glucose = 0.0
DEBUG:root:{'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[2]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7f393eecb290>
DEBUG:root:0) -- secretion substrate = oxygen
DEBUG:root:1) -- secretion substrate = glucose
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7f393eecbce0>
DEBUG:root: live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[2]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7f393eed8c70>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= microglia --> custom_data: {'sample': ['0.0', False]}
DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= astrocyte, reset_mapping= False
DEBUG:root:
--------new_intracellular_params(): cdname_new= astrocyte
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[3]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x7f393eed8f90>
DEBUG:root:--  cycle_live_trate00 0.00072
DEBUG:root: >> phase_durations_path =.//cell_definition[3]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7f393eed90d0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f393eed92b0>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eed9350>
DEBUG:root:start_index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f393eed9a80>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eed9b20>
DEBUG:root:start_index= 0
DEBUG:root: --- transition rate 01 (float) = 9000000000.0
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eed9bc0>
DEBUG:root:start_index= 1
DEBUG:root: --- transition rate 12 (float) = 1.15741e-05
DEBUG:root:volume_path=.//cell_definition[3]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[3]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[3]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'cancer': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[3]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= astrocyte,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = oxygen
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[3]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[3]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7f393eedbbf0>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eedbc40>
DEBUG:root: chemotactic_sensitivity--> oxygen = 0.0
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eedbc90>
DEBUG:root: chemotactic_sensitivity--> glucose = 0.0
DEBUG:root:{'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[3]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7f393eedbe70>
DEBUG:root:0) -- secretion substrate = oxygen
DEBUG:root:1) -- secretion substrate = glucose
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[3]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7f393eee4900>
DEBUG:root: live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[3]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7f393eee5850>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= astrocyte --> custom_data: {'sample': ['0.0', False]}
DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= test, reset_mapping= False
DEBUG:root:
--------new_intracellular_params(): cdname_new= test
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[4]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x7f393eee5b70>
DEBUG:root:--  cycle_live_trate00 0.00072
DEBUG:root: >> phase_durations_path =.//cell_definition[4]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x7f393eee5cb0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f393eee5e90>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eee5f30>
DEBUG:root:start_index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x7f393eee6660>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eee6700>
DEBUG:root:start_index= 0
DEBUG:root: --- transition rate 01 (float) = 9000000000.0
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x7f393eee67a0>
DEBUG:root:start_index= 1
DEBUG:root: --- transition rate 12 (float) = 1.15741e-05
DEBUG:root:volume_path=.//cell_definition[4]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[4]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[4]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'cancer': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0'}
DEBUG:root:--> {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[4]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= test,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = oxygen
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[4]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[4]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x7f393eef4810>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eef4860>
DEBUG:root: chemotactic_sensitivity--> oxygen = 0.0
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x7f393eef48b0>
DEBUG:root: chemotactic_sensitivity--> glucose = 0.0
DEBUG:root:{'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = oxygen
DEBUG:root:    motility_advanced_chemotaxis_substrate= oxygen
DEBUG:root:   chemotactic_sensitivity = {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[4]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x7f393eef4a90>
DEBUG:root:0) -- secretion substrate = oxygen
DEBUG:root:1) -- secretion substrate = glucose
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[4]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x7f393eef54e0>
DEBUG:root: live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root: fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[4]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x7f393eef6430>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= test --> custom_data: {'sample': ['0.0', False]}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
----- update_motility_params():  cdname= cancer
DEBUG:root:     setting motility_substrate_dropdown (for cdname= cancer ) = oxygen
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= cancer ) = oxygen
DEBUG:root:    chemotactic_sensitivity= {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = cancer
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = oxygen
DEBUG:root:{'oxygen': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '10', 'net_export_rate': '0'}, 'glucose': {'secretion_rate': '0.0', 'secretion_target': '0.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:studio.py: self.current_dir = /home/aymeric/tumor-simulation/PhysiCell
DEBUG:root:studio.py: creating ICs, Run, and Plot tabs
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:studio.py: calling vis_tab.substrates_cbox_changed_cb(2)
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Regular.otf', name='Nimbus Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/D050000L.otf', name='D050000L', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-Th.ttf', name='Ubuntu', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Italic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Demi.otf', name='URW Bookman', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-BoldItalic.otf', name='P052', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-BdIta.otf', name='C059', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Bold.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Regular.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-LightItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-Light.otf', name='URW Bookman', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-BoldItalic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Bold.otf', name='Nimbus Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Regular.otf', name='Nimbus Mono PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Demi.otf', name='URW Gothic', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Italic.otf', name='C059', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Bold.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-BoldItalic.otf', name='Nimbus Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Bold.otf', name='Nimbus Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSans-Italic.otf', name='Nimbus Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/Z003-MediumItalic.otf', name='Z003', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Roman.otf', name='C059', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Roman.otf', name='P052', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-Italic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWBookman-DemiItalic.otf', name='URW Bookman', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-Book.otf', name='URW Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-BoldOblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Bold.otf', name='P052', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-BookOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/C059-Bold.otf', name='C059', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/StandardSymbolsPS.otf', name='Standard Symbols PS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusMonoPS-BoldItalic.otf', name='Nimbus Mono PS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusRoman-Regular.otf', name='Nimbus Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoSansMono-Regular.ttf', name='Noto Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/URWGothic-DemiOblique.otf', name='URW Gothic', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Oblique.otf', name='Nimbus Sans Narrow', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/P052-Italic.otf', name='P052', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/usr/share/fonts/opentype/urw-base35/NimbusSansNarrow-Bold.otf', name='Nimbus Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0 to DejaVu Sans ('/home/aymeric/tumor-simulation/env/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 2
DEBUG:root:substrates_in_tree =['oxygen', 'glucose']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = oxygen
DEBUG:root:matched! oxygen
DEBUG:root:microrenv_tab.py: key in param_d.keys() = glucose
DEBUG:root:matched! glucose
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 4
DEBUG:root:cdefs_in_tree =['cancer', 'microglia', 'astrocyte', 'test']
DEBUG:root:
--- key in param_d.keys() = cancer
DEBUG:root:matched! cancer
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= cancer
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0', '': '0'}
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for cancer
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for cancer
DEBUG:root:
--- key in param_d.keys() = microglia
DEBUG:root:matched! microglia
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= microglia
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for microglia
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for microglia
DEBUG:root:
--- key in param_d.keys() = astrocyte
DEBUG:root:matched! astrocyte
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= astrocyte
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for astrocyte
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for astrocyte
DEBUG:root:
--- key in param_d.keys() = test
DEBUG:root:matched! test
DEBUG:root:--- cell_adhesion_affinity= {'cancer': '1.0', 'microglia': '1.0', 'astrocyte': '1.0', 'test': '1.0'}
DEBUG:root:cancer  --> 1.0
DEBUG:root:microglia  --> 1.0
DEBUG:root:astrocyte  --> 1.0
DEBUG:root:test  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): oxygen = oxygen 


DEBUG:root:fill_xml_motility(): {'oxygen': '0.0', 'glucose': '0.0'}
DEBUG:root:oxygen  --> 0.0
DEBUG:root:glucose  --> 0.0
DEBUG:root:self.substrate_list = ['oxygen', 'glucose']
DEBUG:root:substrate = oxygen
DEBUG:root:substrate = glucose
DEBUG:root:------------------- fill_xml_interactions():  cdef= test
DEBUG:root:--- live_phagocytosis_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= cancer
DEBUG:root:cancer  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= microglia
DEBUG:root:microglia  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= astrocyte
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= test
DEBUG:root:test  --> 0.0
DEBUG:root:--- attack_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:--- fusion_rate= {'cancer': '0.0', 'microglia': '0.0', 'astrocyte': '0.0', 'test': '0.0'}
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:cancer  --> 0.0
DEBUG:root:microglia  --> 0.0
DEBUG:root:astrocyte  --> 0.0
DEBUG:root:test  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for test
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for test
DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 100
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
